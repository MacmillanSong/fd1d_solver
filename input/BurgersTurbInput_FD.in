[Case]
 title = decay_burg_turb_temp
 num_elements = 1200
 x_begin = 0.0
 x_end = 6.283185307
 uniform_grid = 1
 refinement_level = 0
 N_exact_ploting_pts = 100

[Simulation]
 unsteady_data_print_flag = 0
 unsteady_data_print_iter = 500
 unsteady_data_print_time  = 0.1  # time point for print of unsteady data
 convergence_tolerance = 1e-16
 divergence_threshold = 20
 restart_flag = 0   # 0: no restart, 1: restart from restart file
 restart_iter = 158e6
 mode = dt_const
 case_no = 64

[wave]
 wave_speed = 1;
 wave_form = 3 ;      # 0: sine wave, 1: Gaussian wave, 2: InViscid Burgers 3: Decaying Turbulence

  [./trigonometric]    # u(x,0) = A * sin ( f * PI + phy ) + C
     wave_frequency = 2.0       # wave_frequnecy f
     wave_amplitude = 1.0  # wave amplitude A
     wave_const = 0.0       # C
     wave_freq_shift = 0.0   # phy

 [../Gaussian]
   Gaussian_exponent = 38.6  # u(x) = A * exp(-38.6 *x^2)
   Gaussian_amplitude = 1.0

 [../Burger_turb]
   turb_prob_type = Decay_turb_omerSan   # Decay_turb_Adams, Decay_turb_Yanan, forced_turb_Sherwin
   max_wave_no = 2048
   ko = 10
   spectrum_restart_flag = 1
   velocity_mean = 75.0

[space_solver]
  eqn_set = Advection_Diffusion  # Advection / Diffusion / Advection_Diffusion
  eqn_type = visc_burger # inv_burger / linear_advec / linear_diffus / visc_burger
  scheme_type = explicit # explicit(classical)/implicit(compact)
  order = 6
  filter_type = pade    # pade(compact) /
  filter_order = 8
  filter_activate_flag = 0
  filter_alpha = 0.49

  [./advec_eqn]
   upwind_biased = 2  # no. of upwind-biased points. If '0' then it is a fully upwind scheme or central scheme

  [../heat_eqn]
   thermal_diffusivity = 2e-4

[time_solver]
 calculate_dt_flag = 0
 calc_dt_adv_diffus_flag = 0   # 0: based on advection, 1: based on diffusion, 2: based on combined advection-diffusion
 CFL_no = 0.5995
 dt = 2e-05
 initial_time = 0
 final_time = 0.250
 no_of_periods = 2.0 #  period = (xf-x0) / wave_speed
 maximum_iteration = 100

 end_of_simulation_flag = 1
# 0: use no. of periods to calc final time and then use final time,
# 1: use final time directly and then calculate no of periods,
# 2:  use max_iteration as a stopping criteria if not converged or diverged

 [./explicit]
   RK_order = 4
