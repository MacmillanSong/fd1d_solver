[Case]
 num_elements = 32767
 x_begin = 0.0
 x_end = 6.283185307
 uniform_grid = 1
 refinement_level = 0
 N_exact_ploting_pts = 100

[Simulation]
 print_freq = 10
 convergence_tolerance = 1e-16
 divergence_threshold = 20
 restart_flag = 0   # 0: no restart, 1: restart from restart file
 restart_iter = 158e6
 mode =  normal  # normal/test/CFL_const/dt_const
 case_no = 28

[wave]
 wave_speed = 1;
 wave_form = 3 ;      # 0: sine wave, 1: Gaussian wave, 2: InViscid Burgers 3: Decaying Turbulence
 wave_frequency = 2.0  # wave_frequnecy x Pi
 Gaussian_exponent = 38.6;  # u(x) = exp(-38.6 *x^2)

  [./Burger_turb]
   turb_prob_type = Decay_turb_omerSan   # Decay_turb_Adams, Decay_turb_Yanan, forced_turb_Sherwin
   max_wave_no = 1024
   ko = 10
  spectrum_restart_flag = 1
   data_print_time = 0.05 # frequency of data print for spectrum calculations

[space_solver]
  eqn_set = Advection_Diffusion  # Advection / Diffusion / Advection_Diffusion
  order = 4;
  upwind_biased = 1  # 1: for 3rd order scheme with upwind biased flux. If '0' then it is a fully upwind scheme

  [./heat_eqn]
  thermal_diffusivity = 2e-4

[time_solver]
 calculate_dt_flag = 0  # 0: specify dt and calc CFL, 1: specify CFL and calc dt

 CFL_no = 0.50

 dt = 1.0e-5
 initial_time = 0
 final_time = 0.200

 no_of_periods = 2.0 #  period = (xf-x0) / wave_speed

 maximum_iteration = 100

 end_of_simulation_flag = 1
# 0: use no. of periods to calc final time and then use final time,
# 1: use final time directly and then calculate no of periods,
# 2:  use max_iteration as a stopping criteria if not converged or diverged

 [./explicit]

  RK_order = 3
